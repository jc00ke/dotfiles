#!/bin/env bash

sudo apt install -y \
  autoconf \
  autopoint \
  bison \
  build-essential \
  cmake \
  curl \
  exuberant-ctags \
  fish \
  flameshot \
  git \
  git-doc \
  git-gui \
  git-svn \
  gitg \
  gnome-calculator \
  gnome-clocks \
  htop \
  i3xrocks-battery \
  i3xrocks-cpu-usage \
  i3xrocks-key-indicator \
  i3xrocks-memory \
  i3xrocks-net-traffic \
  i3xrocks-temp \
  i3xrocks-time \
  i3xrocks-weather \
  imagemagick \
  inotify-tools \
  jq \
  libclang-dev libffi-dev \
  libfreetype6-dev \
  libfontconfig1-dev \
  libgdbm-dev \
  libgtk-3-dev \
  libncurses5-dev \
  libreadline-dev \
  libssl-dev \
  libtool \
  libxcb-xfixes0-dev \
  libxml2-dev \
  libxslt1-dev \
  libyaml-dev \
  openconnect \
  openvpn \
  parallel \
  peek \
  pkg-config \
  python3 \
  python3-pip \
  regolith-look-solarized-dark \
  shellcheck \
  software-properties-common \
  ubuntu-restricted-extras \
  zlib1g-dev

log "Disabling GNOME Screencast for Peek"
# https://github.com/phw/peek/issues/677
gsettings set org.gnome.gnome-flashback screencast false

log "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:jc00ke/dotfiles.git"

chsh -s /usr/bin/fish

log "Installing nix package manager!"
sudo install -d -m755 -o "$(id -u)" -g "$(id -g)" /nix
curl -L https://nixos.org/nix/install | sh

mkdir -p "$HOME/projects"
mkdir -p "$HOME/src"
cd "$HOME" || exit

cd "$HOME" || exit
if [ ! -d "$HOME/.asdf" ]; then
  log "Installing asdf"
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
fi

cd "$HOME/src" || exit
log "Installing ngrok"
ngrok_package="ngrok-stable-linux-amd64"
ngrok_archive="$ngrok_package.zip"
wget "https://bin.equinox.io/c/4VmDzA7iaHb/$ngrok_archive"
unzip "$ngrok_archive"
chmod +x ngrok
sudo mv ngrok /usr/local/bin/

log "Installing fzf"
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

log "Installing git-fuzzy"
git clone --depth 1 https://github.com/bigH/git-fuzzy.git ~/.git-fuzzy

log "Installing Rust"
asdf plugin-add rust https://github.com/code-lever/asdf-rust.git

log "Installing node"
asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git
bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring

log "Installing deno"
asdf plugin-add deno https://github.com/asdf-community/asdf-deno.git

log "Installing lua"
asdf plugin-add lua https://github.com/Stratus3D/asdf-lua.git

log "Installing ripgrep"
asdf plugin-add ripgrep

Log "Installing bat"
asdf plugin-add bat

Log "Installing zoxide"
asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git

Log "Installing fd"
asdf plugin add fd

Log "Installing exa"
asdf plugin add exa

Log "Installing delta"
asdf plugin add delta

Log "Installing yq"
asdf plugin add yq

Log "Installing shfmt"
asdf plugin add shfmt

if command -v nvim >/dev/null 2>&1; then
  log "Installing neovim"
  asdf plugin add neovim
  log "Bootstraping Neovim"
  nvim '+PackerInstall' '+PackerClean' '+PackerUpdate' '+PackerCompile' '+qall'
fi

asdf install
asdf reshim

log "Installing starship"
sh -c "$(curl -fsSL https://starship.rs/install.sh)"

log "Installing direnv"
wget "https://github.com/direnv/direnv/releases/download/v2.28.0/direnv.linux-amd64"
mv "direnv.linux-amd64" "$HOME/.local/bin/direnv"
chmod +x "$HOME/.local/bin/direnv"

log "installing stylua formatter"
cd "$HOME/src" || exit
wget https://github.com/JohnnyMorganz/StyLua/releases/download/v0.10.0/stylua-0.10.0-linux.zip
unzip stylua-0.10.0-linux.zip
chmod +x stylua
mv stylua "$HOME/.local/bin/"

log "Installing lua LSP"
sudo apt install ninja-build
cd "$HOME/src" || exit
# clone project
git clone https://github.com/sumneko/lua-language-server
cd lua-language-server || exit
git submodule update --init --recursive
cd 3rd/luamake || exit
compile/install.sh
cd ../..
./3rd/luamake/luamake rebuild

log "Installing yarn"
curl -o- -L https://yarnpkg.com/install.sh | bash

DIR="${BASH_SOURCE%/*}" || if [[ ! -d $DIR ]]; then DIR="$PWD"; fi
# shellcheck source=./_install.sh
source "$DIR/_install.sh"

log "Consider installing resume service for network adapter."
echo "https://askubuntu.com/a/1058760/128339"
echo "In /etc/systemd/system/resume-r8152.service add the following:"

echo "[Unit]
Description=Fix RTL-8152 Driver on resume from suspend
After=suspend.target

[Service]
User=root
Type=oneshot
ExecStartPre=/sbin/modprobe -r r8152
ExecStart=/sbin/modprobe r8152
TimeoutSec=0
StandardOutput=syslog

[Install]
WantedBy=suspend.target"

echo ""
echo "then run:"
echo "sudo systemctl enable resume-r8152.service"

log "Consider installing wol service for network adapter."
echo "https://www.techrepublic.com/article/how-to-enable-wake-on-lan-in-ubuntu-server-18-04/"
echo "In /etc/systemd/system/wol.service add the following:"

echo "[Unit]
Description=Configure Wake On LAN

[Service]
Type=oneshot
ExecStart=/sbin/ethtool -s enp39s0 wol g

[Install]
WantedBy=basic.target"

echo ""
echo "then run:"
echo "sudo systemctl daemon-reload"
echo "sudo systemctl enable wol.service"
echo "sudo systemctl start wol.service"

log "Installing 1Password"
sudo apt-key \
  --keyring /usr/share/keyrings/1password.gpg \
  adv \
  --keyserver keyserver.ubuntu.com \
  --recv-keys 3FEF9748469ADBE15DA7CA80AC2D62742012EA22
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/1password.gpg] 
https://onepassword.s3.amazonaws.com/linux/debian edge main' \
  | sudo tee /etc/apt/sources.list.d/1password.list
sudo apt update && sudo apt install 1password

log "Installing GitHub CLI"
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
sudo apt-add-repository https://cli.github.com/packages
sudo apt update
sudo apt install gh

log "Installing emoji-picker"
cd "$HOME/src" || exit
gh repo clone jmackie/emoji-picker
cd "emoji-picker" || exit
cargo build --release
mv target/release/emoji-picker ~/.local/bin/

log "Installing fastmod"
cargo install fastmod

log "Installing Python deps for Neovim"
echo "See: https://github.com/liuchengxu/vim-clap/issues/556#issuecomment-712867766"
pip install neovim pyx
