#!/bin/bash

function log {
  msg="$1"
  echo "********************************************"
  echo "$msg"
  echo "********************************************"
  echo ""
}

log "Configure install of Chromium via Debian instead of snap"
sudo tee -a /etc/apt/preferences.d/chromium.pref <<EOF
Package: *
Pin: origin "deb.debian.org"
Pin-Priority: -10

Package: chromium* libvpx5 libjpeg62-turbo
Pin: origin "deb.debian.org"
Pin-Priority: 999
EOF

sudo tee -a /etc/apt/sources.list.d/debian.list <<EOF
deb http://deb.debian.org/debian/ stable main #Debian stable
deb http://deb.debian.org/debian/ stable-updates main #Debian updates
deb http://deb.debian.org/debian-security stable/updates main #Debian security updates
EOF

sudo apt install debian-archive-keyring && \
sudo apt-key add /usr/share/keyrings/debian-archive-keyring.gpg

sudo apt install -y \
  autoconf \
  autopoint \
  bison \
  build-essential \
  chromium \
  cmake \
  curl \
  direnv \
  exuberant-ctags \
  fish \
  git \
  git-doc \
  git-gui \
  git-svn \
  gitg \
  htop \
  hub \
  i3xrocks-battery \
  i3xrocks-cpu-usage \
  i3xrocks-key-indicator \
  i3xrocks-memory \
  i3xrocks-net-traffic \
  i3xrocks-time \
  i3xrocks-weather \
  imagemagick \
  inotify-tools \
  jq \
  libffi-dev \
  libgdbm-dev \
  libncurses5-dev \
  libreadline-dev \
  libssl-dev \
  libtool \
  libxml2-dev \
  libxslt1-dev \
  libyaml-dev \
  neovim \
  openconnect \
  openvpn \
  parallel \
  peek \
  python3-pip \
  software-properties-common \
  ubuntu-restricted-extras \
  zlib1g-dev

log "Install kitty"
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n

log "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:jc00ke/dotfiles.git"

chsh -s /usr/bin/fish

mkdir -p $HOME/projects
mkdir -p $HOME/src
cd $HOME

if [ ! -d "$HOME/.config/omf" ]; then
  cd $HOME/src
  log "Installing oh-my-fish"
  curl -L http://get.oh-my.fish | fish
fi

cd $HOME
if [ ! -d $HOME/.asdf ]; then
  log "Installing asdf"
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.8
fi

if command -v nvim >/dev/null 2>&1; then
  log "Bootstraping Neovim"
  nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi

cd $HOME/src
log "Installing ngrok"
ngrok_package="ngrok-stable-linux-amd64"
ngrok_archive="$ngrok_package.zip"
wget "https://bin.equinox.io/c/4VmDzA7iaHb/$ngrok_archive"
unzip "$ngrok_archive"
chmod +x ngrok
sudo mv ngrok /usr/local/bin/

log "Installing fzf"
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

log "Installing JetBrains Mono"
jbm="JetBrainsMono-1.0.3"
wget "https://download.jetbrains.com/fonts/$jbm.zip"
unzip "$jbm.zip"
fonts_path="$HOME/.local/share/fonts/JetBrainsMono"
mkdir -p "$fonts_path"
cp "$jbm/ttf/*" "$fonts_path/"
fc-cache -f -v | rg JetBrainsMono

log "Installing Rust"
asdf install rust stable
cargo install ripgrep xsv bat
