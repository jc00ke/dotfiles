#!/bin/bash

function log {
  msg="$1"
  echo "********************************************"
  echo "$msg"
  echo "********************************************"
  echo ""
}

sudo apt install -y \
  autoconf \
  autopoint \
  bison \
  build-essential \
  cmake \
  curl \
  direnv \
  exuberant-ctags \
  fish \
  flameshot \
  git \
  git-doc \
  git-gui \
  git-svn \
  gitg \
  htop \
  hub \
  i3xrocks-battery \
  i3xrocks-cpu-usage \
  i3xrocks-key-indicator \
  i3xrocks-memory \
  i3xrocks-net-traffic \
  i3xrocks-time \
  i3xrocks-weather \
  imagemagick \
  inotify-tools \
  jq \
  libclang-dev\
  libffi-dev \
  libgdbm-dev \
  libncurses5-dev \
  libreadline-dev \
  libssl-dev \
  libtool \
  libxml2-dev \
  libxslt1-dev \
  libyaml-dev \
  neovim \
  openconnect \
  openvpn \
  parallel \
  peek \
  pspg \
  python3-pip \
  shellcheck \
  software-properties-common \
  ubuntu-restricted-extras \
  zlib1g-dev

log "Install kitty"
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n

log "Updating the yadm repo origin URL"
yadm remote set-url origin "git@github.com:jc00ke/dotfiles.git"

chsh -s /usr/bin/fish

mkdir -p $HOME/projects
mkdir -p $HOME/src
cd $HOME

if [ ! -d "$HOME/.config/omf" ]; then
  cd $HOME/src
  log "Installing oh-my-fish"
  curl -L http://get.oh-my.fish | fish
  echo "omf install cbjohnson" | fish
fi

cd $HOME
if [ ! -d $HOME/.asdf ]; then
  log "Installing asdf"
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.7.8
fi

cd $HOME/src
log "Installing ngrok"
ngrok_package="ngrok-stable-linux-amd64"
ngrok_archive="$ngrok_package.zip"
wget "https://bin.equinox.io/c/4VmDzA7iaHb/$ngrok_archive"
unzip "$ngrok_archive"
chmod +x ngrok
sudo mv ngrok /usr/local/bin/

log "Installing fzf"
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

log "Installing git-fuzzy"
git clone --depth 1 https://github.com/bigH/git-fuzzy.git ~/.git-fuzzy

log "Installing Rust"
asdf plugin-add rust https://github.com/code-lever/asdf-rust.git
asdf install rust 1.43.1
asdf global rust 1.43.1
cargo_packages="ripgrep xsv bat jql exa"
log "Install $cargo_packages"
echo "$cargo_packages" | xargs cargo install

log "Installing node"
asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git
bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring
asdf install nodejs 12.16.3
asdf global nodejs 12.16.3
log "Installing yarn"
curl -o- -L https://yarnpkg.com/install.sh | bash

asdf reshim

if command -v nvim >/dev/null 2>&1; then
  log "Bootstraping Neovim"
  nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi

log "Consider installing resume service for network adapter."
echo "https://askubuntu.com/a/1058760/128339"
echo "In /etc/systemd/system/resume-r8152.service add the following:"

echo "[Unit]
Description=Fix RTL-8152 Driver on resume from suspend
After=suspend.target

[Service]
User=root
Type=oneshot
ExecStartPre=/sbin/modprobe -r r8152
ExecStart=/sbin/modprobe r8152
TimeoutSec=0
StandardOutput=syslog

[Install]
WantedBy=suspend.target"

echo ""
echo "then run:"
echo "sudo systemctl enable resume-r8152.service"
